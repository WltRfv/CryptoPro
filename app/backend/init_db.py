from .database import db, Team, Member, Question
from .encryption_simple import password_hasher

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ config.py
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
from config import Config  # –ò–ú–ü–û–†–¢–ò–†–£–ï–ú –ö–õ–ê–°–° Config

from datetime import datetime

def init_test_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –û–î–ù–û–ô –∫–æ–º–∞–Ω–¥—ã"""
    db.drop_all()
    db.create_all()

    # –°–æ–∑–¥–∞–µ–º –û–î–ù–£ –∫–æ–º–∞–Ω–¥—É
    team = Team(
        name="–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞",
        total_points=1000
    )
    db.session.add(team)
    db.session.flush()

    # –°–æ–∑–¥–∞–µ–º 4 —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ email
    for member_data in Config.TEAM_MEMBERS:  # –ò–°–ü–û–õ–¨–ó–£–ï–ú Config.
        member = Member(
            name=member_data['name'],
            email=member_data['email'],
            personal_password=password_hasher.hash_password(member_data['personal_password']),
            points=member_data['points'],
            team_id=team.id,
            is_teacher=False
        )
        db.session.add(member)

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    teacher = Member(
        name="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å",
        email="teacher@university.ru",
        personal_password=password_hasher.hash_password(Config.TEACHER_PASSWORD),  # –ò–°–ü–û–õ–¨–ó–£–ï–ú Config.
        points=Config.TEACHER_POINTS,  # –ò–°–ü–û–õ–¨–ó–£–ï–ú Config.
        team_id=team.id,
        is_teacher=True
    )
    db.session.add(teacher)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    questions_data = [
        {'content': '–ß—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω –∏ –∫–∞–∫ –æ–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å?', 'price': 100},
        {'content': '–û–±—ä—è—Å–Ω–∏—Ç–µ –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã Proof-of-Work vs Proof-of-Stake', 'price': 150},
        {'content': '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∏?', 'price': 120},
        {'content': '–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ?', 'price': 200},
    ]

    for question_data in questions_data:
        question = Question(
            content=question_data['content'],
            price=question_data['price'],
            is_approved=True
        )
        db.session.add(question)

    try:
        db.session.commit()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –û–î–ù–û–ô –∫–æ–º–∞–Ω–¥—ã!")
        print("üìß Email —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:")
        for email in Config.TEAM_EMAILS:  # –ò–°–ü–û–õ–¨–ó–£–ï–ú Config.
            print(f" - {email}")
        print(f"\nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å –ø–∞—Ä–æ–ª–µ–º: {Config.TEACHER_PASSWORD}")  # –ò–°–ü–û–õ–¨–ó–£–ï–ú Config.
        print("\nüîë –õ–∏—á–Ω—ã–µ –ª–æ–≥–∏–Ω—ã:")
        for member in Config.TEAM_MEMBERS:  # –ò–°–ü–û–õ–¨–ó–£–ï–ú Config.
            print(f" - {member['name']} / {member['personal_password']}")
    except Exception as e:
        db.session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        raise
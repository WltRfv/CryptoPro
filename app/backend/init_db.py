# app/backend/init_db.py - –ó–ê–ú–ï–ù–ò –≤–µ—Å—å –∫–æ–¥ –Ω–∞:
from .database import db, Team, Member, Question, PublicKey
from .encryption_simple import password_hasher
from .rsa_manager import rsa_manager

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ config.py
import sys
import os

sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
from config import Config

from datetime import datetime


def init_test_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å RSA –∫–ª—é—á–∞–º–∏"""
    db.drop_all()
    db.create_all()

    # –°–æ–∑–¥–∞–µ–º –û–î–ù–£ –∫–æ–º–∞–Ω–¥—É
    team = Team(
        name="–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞",
        total_points=1000
    )
    db.session.add(team)
    db.session.flush()

    # –°–æ–∑–¥–∞–µ–º 4 —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã
    for member_data in Config.TEAM_MEMBERS:
        member = Member(
            name=member_data['name'],
            email=member_data['email'],
            personal_password=password_hasher.hash_password(member_data['personal_password']),
            points=member_data['points'],
            team_id=team.id,
            is_teacher=False
        )
        db.session.add(member)
        db.session.flush()  # –ü–æ–ª—É—á–∞–µ–º ID —É—á–∞—Å—Ç–Ω–∏–∫–∞

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º RSA –∫–ª—é—á–∏ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
        private_key, public_key = rsa_manager.generate_key_pair()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ –±–∞–∑—É
        public_key_record = PublicKey(
            member_id=member.id,
            public_key=public_key
        )
        db.session.add(public_key_record)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤ —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        keys_dir = "user_keys"
        os.makedirs(keys_dir, exist_ok=True)
        with open(f"{keys_dir}/{member_data['name']}_private.pem", "w") as f:
            f.write(private_key)
        print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–ª—é—á –¥–ª—è {member_data['name']}")

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    teacher = Member(
        name="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å",
        email="teacher@university.ru",
        personal_password=password_hasher.hash_password(Config.TEACHER_PASSWORD),
        points=Config.TEACHER_POINTS,
        team_id=team.id,
        is_teacher=True
    )
    db.session.add(teacher)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    questions_data = [
        {'content': '–ß—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω –∏ –∫–∞–∫ –æ–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å?', 'price': 100},
        {'content': '–û–±—ä—è—Å–Ω–∏—Ç–µ –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã Proof-of-Work vs Proof-of-Stake', 'price': 150},
        {'content': '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∏?', 'price': 120},
        {'content': '–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ?', 'price': 200},
    ]

    for question_data in questions_data:
        question = Question(
            content=question_data['content'],
            price=question_data['price'],
            is_approved=True
        )
        db.session.add(question)

    try:
        db.session.commit()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å RSA –∫–ª—é—á–∞–º–∏!")
        print("üìÅ –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫—É user_keys/")
        print("üîê –ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –∏–º–µ–µ—Ç —Å–≤–æ—é –ø–∞—Ä—É RSA –∫–ª—é—á–µ–π")
    except Exception as e:
        db.session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        raise